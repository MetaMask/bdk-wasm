on: [push, pull_request]

name: CI

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      rust_version: ${{ steps.read_toolchain.outputs.rust_version }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v4
      - name: "Read rust version"
        id: read_toolchain
        run: echo "rust_version=$(cat rust-version)" >> $GITHUB_OUTPUT

  build-test:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - version: stable
            clippy: true
          - version: 1.63.0 # MSRV
        features:
          - --no-default-features
          - --all-features
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust.version }}
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh -s -- -f
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.5
      - name: Pin dependencies for MSRV
        if: matrix.rust.version == '1.63.0'
        run: |
          cargo update -p zstd-sys --precise "2.0.8+zstd.1.5.5"
          cargo update -p time --precise "0.3.20"
          cargo update -p home --precise "0.5.5"
          cargo update -p proptest --precise "1.2.0"
          cargo update -p url --precise "2.5.0"
          cargo update -p cc --precise "1.0.105"
          cargo update -p tokio --precise "1.38.1"
          cargo update -p tokio-util --precise "0.7.11"
          cargo update -p indexmap --precise "2.5.0"
          cargo update -p security-framework-sys --precise "2.11.1"
      - name: Build
        run: wasm-pack build --features ${{ matrix.features }}
      - name: Test
        run: wasm-pack test --chrome --firefox --safari --headless --features ${{ matrix.features }}

  fmt:
    name: Rust fmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt
      - name: Check fmt
        run: cargo fmt --all -- --config format_code_in_doc_comments=true --check

  clippy_check:
    needs: prepare
    runs-on: ubuntu-latest
    permissions:
      checks: write
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ needs.prepare.outputs.rust_version }}
          components: clippy
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.5
      - name: Run Clippy
        run: cargo clippy --all-features --all-targets -- -D warnings

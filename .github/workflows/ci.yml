on:
  pull_request:
    branches:
      - main

name: CI

jobs:
  build-test:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - 1.73.0 # MSRV
        features:
          - all
          - debug,default
          - debug,esplora
          - debug,snap
          - debug,bitcoind
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@4f647fc679bcd3b11499ccb42104547c83dabe96
        with:
          toolchain: ${{ matrix.rust }}
      - name: Download wasm-pack
        run: curl -sSL https://rustwasm.github.io/wasm-pack/installer/init.sh -o wasm-pack-init.sh
      - name: Verify wasm-pack checksum
        run: |
          echo "7969444a2635a28157a31fae9736701f658a5ab346eb0c99bea18313c0d84018 wasm-pack-init.sh" > checksum.txt
          sha256sum -c checksum.txt
      - name: Install wasm-pack
        run: sh wasm-pack-init.sh -f
      - name: Rust Cache
        uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab
      - name: Build
        run: |
          if [ "${{ matrix.features }}" = "all" ]; then
            wasm-pack build --all-features
          else
            wasm-pack build --features ${{ matrix.features }}
          fi
      - name: Test
        if: ${{ matrix.features != 'all' }}
        run: wasm-pack test --chrome --firefox --safari --headless --features ${{ matrix.features }}

  lint:
    name: Lint (fmt + clippy)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@4f647fc679bcd3b11499ccb42104547c83dabe96
        with:
          toolchain: stable
          components: rustfmt, clippy
      - name: Rust Cache
        uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab
      - name: Check formatting
        run: cargo fmt --all -- --config format_code_in_doc_comments=true --check
      - name: Run Clippy
        run: cargo clippy --all-features --all-targets -- -D warnings
